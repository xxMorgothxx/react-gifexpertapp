{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","React","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"6MAoCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,IAAMC,SAAS,IAFZ,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BT,GAAc,SAAAU,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBV,EAAcU,EAAOF,YCIdG,EAVK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAE1B,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAGIG,MAAMR,GAHV,cAGbS,EAHa,gBAKIA,EAASC,OALb,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXvB,kBAcZY,GAdY,4CAAH,sDCyBLM,EArBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EAEZrB,IAAMC,SAAS,CACrC0B,KAAM,GACNQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAgBtC,OATArC,IAAMsC,WAAU,WACZlB,EAAQC,GAAUkB,MAAK,SAAAC,GACnBH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGlB,CAACd,IAEGe,EDb2BK,CAAapB,GAAjCW,EAFgB,EAEtBL,KAAcQ,EAFQ,EAERA,QAEtB,OACI,oCACI,wBAAIlB,UAAU,qCAAqCI,GAElDc,GAAW,aAEZ,yBAAKlB,UAAU,+CAEPe,EAAOH,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAaY,IAAKZ,EAAIC,IAAQD,UEavCa,EAxBM,SAAAC,GAAU,IAAD,EAEU5C,IAAMC,SAAS,CAAC,gBAF1B,mBAEnBQ,EAFmB,KAEPV,EAFO,KAI1B,OACI,oCACI,4CAEA,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAGA,4BAEQU,EAAWoB,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,UChB1DwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b522799e.chunk.js","sourcesContent":["\nimport React from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = React.useState('');\n\n    const handleInputChange = ({ target }) => {\n        setInputValue(target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n\n","\nimport React from 'react'\n\nconst GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n\n","\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=em3iPLjHL6JSD8t2r1tYWOQPMYbLYyQI`\n\n    const response = await fetch(url);\n\n    const { data } = await response.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}\n","\nimport React from 'react'\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n            {loading && 'Loading...'}\n\n            <div className=\"card-grid animate__animated animate__fadeIn\">\n                {\n                    images.map(img => (\n                        <GifGridItem key={img.id} {...img} />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import React from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = React.useState({\n        data: [],\n        loading: true\n    });\n\n    React.useEffect(() => {\n        getGifs(category).then(imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            })\n        })\n    }, [category]);\n\n    return state;\n}\n","\nimport React from 'react'\n\n// components\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = props => {\n\n    const [categories, setCategories] = React.useState(['Emily Blunt']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n            <AddCategory setCategories={setCategories} />\n\n            <hr />\n\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid key={category} category={category} />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// components\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}